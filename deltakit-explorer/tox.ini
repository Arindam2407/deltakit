[tox]
envlist = pytest, pylint, mypy, pycodestyle, isort, ochrona, pip-audit, bandit
requires = tox>=4
package_name = deltakit_explorer

[testenv]
extras = test

[testenv:pytest]
commands =
    pytest --cov {envsitepackagesdir}/{[tox]package_name} --cov-report term-missing {posargs}

[testenv:pylint]
extras = lint
commands =
    pylint src/{[tox]package_name} {posargs}

[testenv:isort]
extras = lint
commands =
    isort src/{[tox]package_name} tests --check-only --diff -p {[tox]package_name}

[testenv:pycodestyle]
extras = lint
commands =
    pycodestyle -v src/{[tox]package_name} {posargs}

[testenv:mypy]
extras = lint
commands =
    mypy src/{[tox]package_name} {posargs}

[testenv:licenses]
licenses_file = licenses_{[tox]package_name}
allowlist_externals = bash
extras = licences
commands =
    pip-licenses --format confluence --output-file {[testenv:licenses]licenses_file}.confluence
    bash -c 'echo -e "\n$(date -u)" >> {[testenv:licenses]licenses_file}.confluence'
    pip-licenses --format csv --output-file {[testenv:licenses]licenses_file}.csv

[testenv:clean]
allowlist_externals = rm
skipsdist = true
skip_install = true
ignore_outcome = true
commands =
    rm -r testreport.xml \
    coverage.xml \
    pylint.log \
    mypy.xml \
    pycodestyle.log \
    sphinx_build.log \
    docs/_build/html \
    {[testenv:licenses]licenses_file}.confluence \
    {[testenv:licenses]licenses_file}.csv


[pycodestyle]
max-line-length = 89
ignore = E117,E125,E126,E127,E128,E201,E202,E203,E204,E226,E266,E302,E303,E501,E502,E742,W292,W293,W503,W504

[testenv:ochrona]
allowlist_externals = bash
extras = security
commands =
	bash -c 'pip freeze | grep -v -e "parso" -e "tornado" | ochrona {posargs}'

[testenv:pip-audit]
allowlist_externals = bash
extras = security
commands =
	bash -c 'pip freeze | pip-audit {posargs}'

[testenv:bandit]
allowlist_externals = bash
extras = security
commands =
	bash -c 'bandit -r src/{[tox]package_name} examples -n 3 -lll {posargs}'
